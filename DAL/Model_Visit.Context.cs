//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class Entities_Visit : DbContext
    {
        public Entities_Visit()
            : base("name=Entities_Visit")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<BRANCH_COMPANY> BRANCH_COMPANY { get; set; }
        public DbSet<BRANCH_OFFICE> BRANCH_OFFICE { get; set; }
        public DbSet<BUSINESS> BUSINESS { get; set; }
        public DbSet<BUSINESS_RULE_TYPE> BUSINESS_RULE_TYPE { get; set; }
        public DbSet<BUSINESS_RULES> BUSINESS_RULES { get; set; }
        public DbSet<CITIES> CITIES { get; set; }
        public DbSet<CLIENT_BUSINESS> CLIENT_BUSINESS { get; set; }
        public DbSet<COUNTRY> COUNTRY { get; set; }
        public DbSet<DETAIL_VISITS> DETAIL_VISITS { get; set; }
        public DbSet<EMPLOYEE> EMPLOYEE { get; set; }
        public DbSet<IT_HAS_ACTIVITIES> IT_HAS_ACTIVITIES { get; set; }
        public DbSet<OPTIONS_LIST_RULES> OPTIONS_LIST_RULES { get; set; }
        public DbSet<PERMISSIONS> PERMISSIONS { get; set; }
        public DbSet<QUOTATION> QUOTATION { get; set; }
        public DbSet<QUOTATION_STATE> QUOTATION_STATE { get; set; }
        public DbSet<ROLE> ROLE { get; set; }
        public DbSet<USES> USES { get; set; }
        public DbSet<VISITS> VISITS { get; set; }
    
        public virtual ObjectResult<PR_SEARCH_EMPLOYEE_Result> PR_SEARCH_EMPLOYEE(Nullable<bool> state, Nullable<int> idBusiness)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(bool));
    
            var idBusinessParameter = idBusiness.HasValue ?
                new ObjectParameter("IdBusiness", idBusiness) :
                new ObjectParameter("IdBusiness", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PR_SEARCH_EMPLOYEE_Result>("PR_SEARCH_EMPLOYEE", stateParameter, idBusinessParameter);
        }
    
        public virtual ObjectResult<PR_SEARCH_EMPLOYEE_SELECTION_Result> PR_SEARCH_EMPLOYEE_SELECTION(Nullable<bool> state, Nullable<int> idBusiness, string name, string surname, string document, string email, string role)
        {
            var stateParameter = state.HasValue ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(bool));
    
            var idBusinessParameter = idBusiness.HasValue ?
                new ObjectParameter("IdBusiness", idBusiness) :
                new ObjectParameter("IdBusiness", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            var documentParameter = document != null ?
                new ObjectParameter("Document", document) :
                new ObjectParameter("Document", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PR_SEARCH_EMPLOYEE_SELECTION_Result>("PR_SEARCH_EMPLOYEE_SELECTION", stateParameter, idBusinessParameter, nameParameter, surnameParameter, documentParameter, emailParameter, roleParameter);
        }
    }
}
